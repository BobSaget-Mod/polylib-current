dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which is run to configure the
dnl	Makefile in this directory.

# Authors: Bart Kienhuis, Vincent Loechner, T. Risset
# Copyright (c) 2000 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY

dnl Process this file with autoconf to produce a configure script.
define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl
AC_INIT(include/polylib/polylib.h)
AM_INIT_AUTOMAKE(polylib, 5.21.0)

VERSION=5.21.0

AC_SUBST(versioninfo)
versioninfo=5:2:0

dnl Checks for programs.
AC_PROG_CC
AC_PROG_LN_S
AC_PROG_INSTALL
AC_PROG_LIBTOOL

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(limits.h unistd.h)


dnl /*****************************************************************************/
dnl See if the only goal is to create an 'int', 'longint', or 'longlongint' library

AC_CHECK_SIZEOF(int,1)
AC_CHECK_SIZEOF(long int,1)
AC_CHECK_SIZEOF(long long int,1)

AC_SUBST(CPPFLAGS32)
AC_SUBST(CPPFLAGS64)
AC_SUBST(CPPFLAGS128)

for type in long_long_int long_int int; do
    case "$type" in
	int)
	    bits=`expr $ac_cv_sizeof_int \* 8`
	    flags="-DLINEAR_VALUE_IS_INT"
	    ;;
	long_int)
	    bits=`expr $ac_cv_sizeof_long_int \* 8`
	    flags="-DLINEAR_VALUE_IS_LONG \
		   -DLINEAR_VALUE_PROTECT_MULTIPLY \
		   -DLINEAR_VALUE_ASSUME_SOFTWARE_IDIV"
	    ;;
	long_long_int)
	    bits=`expr $ac_cv_sizeof_long_long_int \* 8`
	    flags="-DLINEAR_VALUE_IS_LONGLONG \
		   -DLINEAR_VALUE_PROTECT_MULTIPLY \
		   -DLINEAR_VALUE_ASSUME_SOFTWARE_IDIV"
	    ;;
    esac
    case "$bits" in
	32)
	    CPPFLAGS32=$flags
	    ;;
	64)
	    CPPFLAGS64=$flags
	    ;;
	128)
	    CPPFLAGS128=$flags
	    ;;
    esac
done

AC_SUBST(polylibs)

AC_ARG_ENABLE(int-lib,
	[  --enable-int-lib        Build an int library], 
        [lib_type=int
	 bits=`expr $ac_cv_sizeof_int \* 8`
	 polylibs="libpolylib$bits.la $polylibs"
	])
AC_ARG_ENABLE(longint-lib,
	[  --enable-longint-lib    Build a long int library], 
        [lib_type=longint
	 bits=`expr $ac_cv_sizeof_long_int \* 8`
	 polylibs="libpolylib$bits.la $polylibs"
	])
AC_ARG_ENABLE(longlongint-lib,
	[  --enable-longlongint-lib Build a long long int library], 
        [lib_type=longlongint
	 bits=`expr $ac_cv_sizeof_long_long_int \* 8`
	 polylibs="libpolylib$bits.la $polylibs"
	])

dnl Check for GMP library
AC_MSG_CHECKING(whether to use GMP)
AC_ARG_WITH(libgmp, 
        [  --with-libgmp           DIR Location of the GMP Distribution], 
	gmp_package=$withval, gmp_package=no)
if test "x$gmp_package" = "xno"; then
	AC_MSG_RESULT(no)
else
	AC_MSG_RESULT(yes)
	if test "x$gmp_package" != "xyes"; then
	    GMP_DIR=$gmp_package
	    if test ! -d "$GMP_DIR"; then
	    	AC_ERROR(Directory given for GMP Distribution is not a directory)
	    fi
	    CPPFLAGS="-I$GMP_DIR/include $CPPFLAGS"
	    LDFLAGS="-L$GMP_DIR/lib $LDFLAGS"
	fi
	AC_CHECK_HEADER(gmp.h,
		[AC_CHECK_LIB(gmp,main,
		    [poly_cv_gmpfatal="no"],
		    [poly_cv_gmpfatal="yes"])],
		[poly_cv_gmpfatal="yes"])
	if test "$poly_cv_gmpfatal" = "yes"; then
		AC_MSG_ERROR([GMP not found])
	fi

	lib_type=gmp
	BITS=`expr gmp`
	LIBS="-lgmp $LIBS"
	polylibs="libpolylib$BITS.la $polylibs"
fi

if test "X$lib_type" = "X"; then
    AC_MSG_CHECKING(what the LONG representation is)
    if test "$ac_cv_sizeof_long_long_int" -gt "$ac_cv_sizeof_int"; then
	AC_MSG_RESULT([long long int])
	lib_type=longlongint
	bits=`expr $ac_cv_sizeof_long_long_int \* 8`
	polylibs="libpolylib$bits.la $polylibs"
    elif test "$ac_cv_sizeof_long_int" -gt "$ac_cv_sizeof_int"; then
	AC_MSG_RESULT([long int])
	lib_type=longint
	bits=`expr $ac_cv_sizeof_long_int \* 8`
	polylibs="libpolylib$bits.la $polylibs"
    else
	AC_MSG_RESULT([NONE!])
	lib_type=int
	bits=`expr $ac_cv_sizeof_int \* 8`
	polylibs="libpolylib$bits.la $polylibs"
    fi
fi

case "$lib_type" in
	int)
	    BITS=`expr $ac_cv_sizeof_int \* 8`
	    ;;
	longint)
	    BITS=`expr $ac_cv_sizeof_long_int \* 8`
	    ;;
	longlongint)
	    BITS=`expr $ac_cv_sizeof_long_long_int \* 8`
	    ;;
esac


AC_SUBST(polylib)
polylib="libpolylib$BITS.la"

AM_CONDITIONAL(BITS32, test $BITS = 32)

dnl /*****************************************************************************/
AC_ARG_ENABLE(extra-suffix,
	[  --enable-extra-suffix   Add bits size suffix to executables],
	[ if test "$enableval" = yes; then
		program_transform_name="s/\$\$/$BITS/;$program_transform_name"
    fi ] )

dnl /********************************************************************/
dnl Check for DOXYGEN package
AC_ARG_WITH(doxygen, [ --with-doxygen            DIR Location of the Doxygen Distribution (http://www.doxygen.org)], doxygen_package=$withval)

dnl AC_MSG_CHECKING(for Doxygen program)
AC_CHECK_PROG(DOXYGEN,doxygen,doxygen,test,[$PATH:$doxygen_package/bin:/usr/local/bin])
dnl AC_MSG_RESULT($DOXYGEN)


echo "Polylib will be built with " $LIBS_TO_BUILD "integer size"
echo "---------------------------------------------------"
echo "You can proceed with:"
echo "make	         :to build the libs and the executables"
echo "make tests         :to test the library"
echo "make install       :to install them (default /usr/local)"
echo "---------------------------------------------------"


AC_SUBST(VERSION)

AC_SUBST(LIBS)

dnl long/int bits and compilation flags
AC_SUBST(BITS)

dnl Used with doxygen
AC_SUBST(DOXYGEN)

dnl Currently, we only create one .pc file
dnl Creating one for each configured version is a bit complicated
PACKAGE_NAME=polylib$BITS
AX_CREATE_PKGCONFIG_INFO

AC_CONFIG_HEADERS(config.h)
AC_OUTPUT(Makefile
	  include/Makefile
	  include/polylib/Makefile
	  Test/Makefile
	  Test/Zpolytest/Makefile
	  Test/ehrhart/Makefile
	  Test/ehrhart_union/Makefile
	  Test/general/Makefile
	  Test/pp/Makefile
	  polylib.doxygen
	)
